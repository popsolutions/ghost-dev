services:
  ghost:
    image: ghost:5.119.3
    restart: always
    ports:
      - 8080:2368
      - 35729:35729
    environment:
      database__client: mysql
      database__connection__host: db
      database__connection__user: root
      database__connection__password: example
      database__connection__database: ghost
      url: http://localhost:8080
      NODE_ENV: development
    networks:
      - n8n_network
      - ghost
    volumes:
      - /opt/ghost/content:/var/lib/ghost/content

  db:
    image: mysql:8.0
    restart: always
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: example
    volumes:
      - db:/var/lib/mysql
    networks:
      - ghost_db
      - ghost

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    restart: always
    ports:
        - 9000:80
    networks:
      - ghost_db
    environment:
        PMA_ARBITRARY: 1
        MYSQL_ROOT_PASSWORD: example
        MYSQL_USER: root
        MYSQL_PASSWORD: example


  postgres:
    image: postgres:16
    restart: always
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - POSTGRES_NON_ROOT_USER
      - POSTGRES_NON_ROOT_PASSWORD
    volumes:
      - db_storage:/var/lib/postgresql/data
      - ./init-data.sh:/docker-entrypoint-initdb.d/init-data.sh
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 5s
      timeout: 5s
      retries: 10

  n8n:
    image: docker.n8n.io/n8nio/n8n
    restart: always
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=${POSTGRES_DB}
      - DB_POSTGRESDB_USER=${POSTGRES_NON_ROOT_USER}
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_NON_ROOT_PASSWORD}
    ports:
      - 5678:5678
    links:
      - postgres
    volumes:
      - n8n_storage:/home/node/.n8n
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  ghost:
  db:
  db_storage:
  n8n_storage:


networks:
  n8n_network:
  ghost:
  ghost_db:
